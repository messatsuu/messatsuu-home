document.addEventListener("DOMContentLoaded", function() {
    function sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    function handleInput() {
        let input = $("#prompt").val();
        const [command, ...params] = input.trim().split(/\s+/);

        const commands = {
            'ls': () => listFiles(params),
            'pwd': () => getCurrentDirectory(params),
            'cd': () => changeDirectory(params),
            'cat': () => cat(params),
            'neofetch': () => neofetch(params),
            'whoami': () => whoAmI(params),
            'help': () => showHelp(params),
            'clear': () => clear(params),
            'nvim': () => echo(['$EDITOR']),
            'echo': () => echo(params),
            'sudo': () => sudo(params),
            'mkdir': () => mkdir(params),
            'env': () => env(params),
            // 'mv': () => moveFile(params),
            // 'rm': () => deleteFile(params),
            // 'mkdir': () => createDirectory(params),
        };

        if (commands.hasOwnProperty(command.toLowerCase())) {
            return commands[command.toLowerCase()]();
        } else {
            return `zsh: command not found: ${input}.<br/><br/> Type "help" for a list of commands.`;
        }
    }

    {% include("js/commands.js.twig") %}

    let prompt = $("#prompt");
    prompt.keypress(async function(event) {
        if(event.which == 13) {
            await sleep(40);
            let prompt = $("#prompt").val();
            let PS1 = $("#PS1").html();

            if (prompt === "") {
                $("#output").append(`<div class="mb-2">${PS1} </div>`);
            } else {
                let output = handleInput();

                $("#output").append(`<div class="mb-2">${PS1} ` + prompt + "</div>");
                let outputElement = $('<div class="mb-2">').html(output).hide();
                $("#output").append(outputElement);
                outputElement.fadeIn(500);
                $("#prompt").val("");
            }

            $("html, body").animate({ scrollTop: $(document).height()-$(window).height() }, 200);
            $("#prompt").focus();
        }
    });

    // Initial text animation
    var targetText = 'neofetch';
    var currentIndex = 0;

    // Animate typing effect
    var typingInterval = setInterval(async function() {
        var currentText = targetText.slice(0, currentIndex);
        prompt.val(currentText);

        // stop the animation when the entire text is typed and press enter
        if (currentIndex === targetText.length) {
            clearInterval(typingInterval);
            var enterEvent = $.Event('keypress');
            enterEvent.which = 13;

            await sleep(900);
            prompt.trigger(enterEvent);
        }

        currentIndex++;
    }, 100);
});
